{"ast":null,"code":"import axios from \"axios\";\nconst {\n  REACT_APP_ACCESS_TOKEN\n} = process.env;\nconst base_url = \"https://www.strava.com/api/v3\";\nconst access_token = `access_token=${REACT_APP_ACCESS_TOKEN}`;\nexport const getUserActivities = () => async dispatch => {\n  const url = `${base_url}/activities/?${access_token}`; //const response = await axios.get(url, {});\n\n  const getData = async function () {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const response = await fetch(url, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  };\n\n  postData(url).then(data => {\n    console.log(data);\n  });\n  dispatch({\n    type: \"GET_USER_ACTIVITIES\",\n    payload: response\n  });\n};\n\nasync function postData() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Opciones por defecto estan marcadas con un *\n  const response = await fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}","map":{"version":3,"sources":["C:/Users/tomis/OneDrive/Escritorio/vert-app/src/redux/actions/index.js"],"names":["axios","REACT_APP_ACCESS_TOKEN","process","env","base_url","access_token","getUserActivities","dispatch","url","getData","data","response","fetch","method","mode","headers","body","JSON","stringify","json","postData","then","console","log","type","payload","cache","credentials","redirect","referrerPolicy"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA6BC,OAAO,CAACC,GAA3C;AACA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,YAAY,GAAI,gBAAeJ,sBAAuB,EAA5D;AAEA,OAAO,MAAMK,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACzD,QAAMC,GAAG,GAAI,GAAEJ,QAAS,gBAAeC,YAAa,EAApD,CADyD,CAGzD;;AACA,QAAMI,OAAO,GAAG,kBAA+B;AAAA,QAAxBD,GAAwB,uEAAlB,EAAkB;AAAA,QAAdE,IAAc,uEAAP,EAAO;AAC7C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCK,MAAAA,MAAM,EAAE,KADwB;AAEhCC,MAAAA,IAAI,EAAE,SAF0B;AAGhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN0B,KAAN,CAA5B;AAQA,WAAOC,QAAQ,CAACQ,IAAT,EAAP;AACD,GAVD;;AAYAC,EAAAA,QAAQ,CAACZ,GAAD,CAAR,CAAca,IAAd,CAAoBX,IAAD,IAAU;AAC3BY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,GAFD;AAIAH,EAAAA,QAAQ,CAAC;AACPiB,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,OAAO,EAAEd;AAFF,GAAD,CAAR;AAID,CAxBM;;AA0BP,eAAeS,QAAf,GAA6C;AAAA,MAArBZ,GAAqB,uEAAf,EAAe;AAAA,MAAXE,IAAW,uEAAJ,EAAI;AAC3C;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCK,IAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,IAAAA,IAAI,EAAE,MAF0B;AAElB;AACdY,IAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,IAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BZ,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT,CAEP;;AAFO,KALuB;AAShCa,IAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,IAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/Bb,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAX0B,CAWJ;;AAXI,GAAN,CAA5B;AAaA,SAAOC,QAAQ,CAACQ,IAAT,EAAP,CAf2C,CAenB;AACzB","sourcesContent":["import axios from \"axios\";\r\nconst { REACT_APP_ACCESS_TOKEN } = process.env;\r\nconst base_url = \"https://www.strava.com/api/v3\";\r\nconst access_token = `access_token=${REACT_APP_ACCESS_TOKEN}`;\r\n\r\nexport const getUserActivities = () => async (dispatch) => {\r\n  const url = `${base_url}/activities/?${access_token}`;\r\n\r\n  //const response = await axios.get(url, {});\r\n  const getData = async (url = \"\", data = {}) => {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  postData(url).then((data) => {\r\n    console.log(data);\r\n  });\r\n\r\n  dispatch({\r\n    type: \"GET_USER_ACTIVITIES\",\r\n    payload: response,\r\n  });\r\n};\r\n\r\nasync function postData(url = \"\", data = {}) {\r\n  // Opciones por defecto estan marcadas con un *\r\n  const response = await fetch(url, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n"]},"metadata":{},"sourceType":"module"}