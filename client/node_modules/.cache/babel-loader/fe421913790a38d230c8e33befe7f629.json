{"ast":null,"code":"import axios from \"axios\";\nconst {\n  REACT_APP_ACCESS_TOKEN\n} = process.env;\nconst base_url = \"https://www.strava.com/api/v3\";\nconst access_token = `access_token=${REACT_APP_ACCESS_TOKEN}`;\nexport const getUserActivities = () => async dispatch => {\n  const url = `${base_url}/activities?${access_token}`; //const response = await axios.get(url, {});\n\n  const getData = async function () {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    const response = await fetch(url, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  };\n\n  getData(url).then(data => data.json()).then(data => {\n    dispatch({\n      type: \"GET_USER_ACTIVITIES\",\n      payload: data\n    });\n  });\n}; // async function postData(url = \"\", data = {}) {\n//   // Opciones por defecto estan marcadas con un *\n//   const response = await fetch(url, {\n//     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n//     mode: \"cors\", // no-cors, *cors, same-origin\n//     cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n//     credentials: \"same-origin\", // include, *same-origin, omit\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       // 'Content-Type': 'application/x-www-form-urlencoded',\n//     },\n//     redirect: \"follow\", // manual, *follow, error\n//     referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n//     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n//   });\n//   return response.json(); // parses JSON response into native JavaScript objects\n// }","map":{"version":3,"sources":["C:/Users/tomis/OneDrive/Escritorio/vert-app/src/redux/actions/index.js"],"names":["axios","REACT_APP_ACCESS_TOKEN","process","env","base_url","access_token","getUserActivities","dispatch","url","getData","response","fetch","method","mode","headers","then","data","json","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA6BC,OAAO,CAACC,GAA3C;AACA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,YAAY,GAAI,gBAAeJ,sBAAuB,EAA5D;AAEA,OAAO,MAAMK,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACzD,QAAMC,GAAG,GAAI,GAAEJ,QAAS,eAAcC,YAAa,EAAnD,CADyD,CAGzD;;AACA,QAAMI,OAAO,GAAG,kBAAoB;AAAA,QAAbD,GAAa,uEAAP,EAAO;AAClC,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,MAAAA,MAAM,EAAE,KADwB;AAEhCC,MAAAA,IAAI,EAAE,SAF0B;AAGhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAAN,CAA5B;AAOA,WAAOJ,QAAP;AACD,GATD;;AAWAD,EAAAA,OAAO,CAACD,GAAD,CAAP,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESC,IAAD,IAAU;AACdT,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,qBADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAPH;AAQD,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nconst { REACT_APP_ACCESS_TOKEN } = process.env;\r\nconst base_url = \"https://www.strava.com/api/v3\";\r\nconst access_token = `access_token=${REACT_APP_ACCESS_TOKEN}`;\r\n\r\nexport const getUserActivities = () => async (dispatch) => {\r\n  const url = `${base_url}/activities?${access_token}`;\r\n\r\n  //const response = await axios.get(url, {});\r\n  const getData = async (url = \"\") => {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n\r\n  getData(url)\r\n    .then((data) => data.json())\r\n    .then((data) => {\r\n      dispatch({\r\n        type: \"GET_USER_ACTIVITIES\",\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n\r\n// async function postData(url = \"\", data = {}) {\r\n//   // Opciones por defecto estan marcadas con un *\r\n//   const response = await fetch(url, {\r\n//     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n//     mode: \"cors\", // no-cors, *cors, same-origin\r\n//     cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n//     credentials: \"same-origin\", // include, *same-origin, omit\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       // 'Content-Type': 'application/x-www-form-urlencoded',\r\n//     },\r\n//     redirect: \"follow\", // manual, *follow, error\r\n//     referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n//     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n//   });\r\n//   return response.json(); // parses JSON response into native JavaScript objects\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}